#!/bin/bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
# Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-k close_or_remove
hc keybind $Mod-Return spawn terminator

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-n     focus down
hc keybind $Mod-e     focus up
hc keybind $Mod-i     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-n     shift down
hc keybind $Mod-Shift-e     shift up
hc keybind $Mod-Shift-i     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-r       split   bottom  0.5
hc keybind $Mod-s       split   top     0.5
hc keybind $Mod-a       split   left    0.5
hc keybind $Mod-t       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-n       resize down +$resizestep
hc keybind $Mod-Control-e       resize up +$resizestep
hc keybind $Mod-Control-i       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# choosing layouts
hc keybind $Mod-Shift-u   set_layout vertical
hc keybind $Mod-Shift-o   set_layout horizontal
hc keybind $Mod-Shift-s   set_layout max
hc keybind $Mod-Shift-g   set_layout grid

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-q remove
hc keybind $Mod-space cycle_layout 1
hc keybind $Mod-f floating toggle
hc keybind F11 fullscreen toggle
hc keybind $Mod-p pseudotile toggle

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 set-zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-l jumpto urgent

# Applications starts
hc keybind $Mod-Control-c   spawn chromium
hc keybind $Mod-Control-v   spawn chromium --incognito
hc keybind $Mod-Control-m   spawn emacs
hc keybind $Mod-Control-t   spawn terminator
hc keybind $Mod-Control-s   spawn dmenu_run
hc keybind $Mod-w           spawn dmenu_run
hc keybind $Mod-Control-f   spawn thunar
hc keybind Print            spawn scrot -e 'mv $f ~/Pictures/screenshots'
hc keybind $Mod-F10         spawn amixer set Master toggle
hc keybind $Mod-F11         spawn amixer set Master 8%-
hc keybind $Mod-F12         spawn amixer set Master 8%+

# Information
hc keybind $Mod+Shift+l     spawn notify-send -u low "$(hc layout)"

# hc set window_border_normal_color '#166294'
# hc set window_border_active_color '#46c2e4'
# colors
gap=0
hc set frame_border_normal_color '#6652b4'
hc set frame_border_active_color '#a692e4'
hc set frame_bg_normal_color '#101010'
hc set frame_bg_normal_color '#101010'
hc set frame_border_width 0
hc set window_border_width 1
hc set window_border_inner_width 0
hc set window_border_normal_color '#333333'
hc set window_border_active_color '#b6e2f4'
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 0

# add overlapping window borders
hc set window_gap $gap
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm.*|Konsole|Guake)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK)' manage=off
hc rule class~'(.*[Dd]menu.*)' manage=off
hc rule class~'(.*[Pp]anel.*)' manage=off
hc rule class~'(.*[Tt]ray.*)' manage=off
# hc rule class~'(.*[Kk]upfer.*)' manage=off
# hc rule class~'(.*[Kk]upfer.*)' focus=on

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply
# setxkbmap us -variant colemak
xrandr --output DVI-D-2 --right-of VGA-1
hc detect_monitors

for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
   hc keybind $Mod-Control-$((monitor+1)) focus_monitor $monitor
done

hc pad 0 20 0 0 0
hc pad 1 0 0 0 0
TINT2_RUNNING=`ps --no-headers -Ctint2 | wc -l`
if [ ${TINT2_RUNNING} -ge 1 ]; then
    killall tint2
fi
tint2 &

# Autostarted programs
apptraystart () {
  # Panel
  (sleep 1s && dropboxd) &
  (sleep 1s && kalu) &
  (sleep 1s && nm-applet) &
  (sleep 1s && pnmixer) &
  (sleep 1s && parcellite) &
  (sleep 1s && xfce4-power-manager) &
  # Non Panel
  (sleep 1s && dunst) &
  (sleep 1s && thunar --daemon) &
}


# Applications
# run everything - if guake isn't running
DUNST_RUNNING=`ps --no-headers -Cdunst | wc -l`
if [ ${DUNST_RUNNING} -lt 1 ]; then
    apptraystart
fi

nitrogen --restore
